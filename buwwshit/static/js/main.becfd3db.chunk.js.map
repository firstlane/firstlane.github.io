{"version":3,"sources":["terms.js","replace.js","redirects.js","index.js"],"names":["bullshitTerms","revealBullshitInternal","text","c","charAt","last","length","bullshit","toUpperCase","substr","findAndReplaceText","regex","replaceFunc","replace","censor","str","find","esc","reg","RegExp","revealDOMBullshitCensored","portion","match","revealBullshit","revealDOMBullshit","censored","bullshitRe","join","bsText","censoredText","urlRedirects","InputBox","props","state","newText","this","setState","onChange","placeholder","updateText","target","value","name","rows","cols","React","Component","OutputBox","readOnly","uwuify","Uwuifier","uwuifySentence","App","inputText","outputText","input","htmlObject","document","createElement","id","innerHTML","doc","DOMParser","parseFromString","body","firstChild","lastChild","docString","XMLSerializer","serializeToString","findAndReplaceDOMText","getRootNode","preset","anchors","getElementsByTagName","i","index","Math","floor","random","href","output","startsWith","onClick","buwwuify","getElementsByName","checked","type","for","ReactDOM","render","getElementById"],"mappings":"mMA0hBeA,EA1hBO,CAClB,kOAGA,MACA,OACA,KACA,QACA,aACA,0BACA,8BACA,aACA,iBACA,cACA,gBACA,cACA,kBACA,cACA,WACA,UACA,kBACA,aACA,aACA,UACA,UACA,aACA,iCACA,eACA,UACA,cACA,gBACA,YACA,YACA,mBACA,gBACA,UACA,4BACA,aACA,WACA,YACA,yBACA,UACA,gBACA,gBACA,gBACA,WACA,cACA,gBACA,eACA,oBACA,iBACA,cACA,YACA,gBACA,YACA,qBACA,cACA,mBACA,SACA,iBACA,cACA,cACA,0BACA,OACA,iBACA,WACA,mBACA,iBACA,yBACA,cACA,iBACA,oBACA,kBACA,iBACA,iBACA,QACA,eACA,qBACA,0BACA,iBACA,kBACA,sBACA,sBACA,uBACA,aACA,2BACA,qBACA,gBACA,gBACA,mBACA,0BACA,2BACA,qBACA,kBACA,qBACA,kBACA,gBACA,cACA,aACA,eACA,gBACA,wBACA,eACA,SACA,iBACA,eACA,eACA,kBACA,gBACA,gBACA,kBACA,wBACA,MACA,aACA,2CACA,qBACA,eACA,QACA,cACA,eACA,cACA,oBACA,WACA,YACA,gBACA,UACA,mBACA,cACA,YACA,eACA,kBACA,UACA,gBACA,yBACA,kBACA,kBACA,uBACA,2BACA,oBACA,eACA,aACA,qBACA,iBACA,WACA,gBACA,iBACA,mBACA,iCACA,cACA,aACA,gBACA,uBACA,iBACA,kBACA,UACA,cACA,uBACA,uBACA,eACA,oBACA,uBACA,aACA,iBACA,aACA,SACA,uBACA,YACA,aACA,MACA,WACA,MACA,kBACA,aACA,YACA,sBACA,YACA,cACA,iBACA,aACA,WACA,cACA,WACA,YACA,WACA,gBACA,kBACA,aACA,iBACA,kBACA,aACA,kBACA,cACA,OACA,iBACA,YACA,mBACA,WACA,eACA,eACA,cACA,sBACA,aACA,WACA,eACA,eACA,eACA,YACA,aACA,cACA,YACA,eACA,SACA,YACA,gBACA,WACA,mBACA,SACA,OACA,WACA,OACA,gBACA,YACA,oBACA,6BACA,WACA,gBACA,eACA,aACA,iBACA,aACA,qBACA,eACA,kBACA,aACA,uBACA,kBACA,wBACA,iBACA,yBACA,WACA,WACA,WACA,iBACA,aACA,wBACA,SACA,wBACA,oBACA,iBACA,4BACA,eACA,SACA,yBACA,iCACA,sBACA,YACA,uBACA,2BACA,wBACA,YACA,MACA,kBACA,0BACA,UACA,oCACA,QACA,oBACA,iBACA,UACA,WACA,aACA,YACA,SACA,kBACA,8BACA,YACA,mBACA,mBACA,YACA,oBACA,oBACA,MACA,mBACA,cACA,UACA,sDACA,eACA,uBACA,uBACA,eACA,sCACA,gBACA,oBACA,UACA,aACA,YACA,4BACA,cACA,eACA,gBACA,UACA,0BACA,UACA,KACA,eACA,4BACA,kBACA,eACA,qBACA,MACA,aACA,aACA,cACA,YACA,2CACA,QACA,UACA,QACA,aACA,6BACA,aACA,mBACA,WACA,wBACA,WACA,eACA,iDACA,gBACA,aACA,kBACA,oBACA,aACA,qBACA,UACA,aACA,aACA,cACA,kCACA,qBACA,6BACA,sBACA,mBACA,WACA,uBACA,yBACA,eACA,yBACA,cACA,UACA,kBACA,WACA,WACA,QACA,mBACA,aACA,iBACA,WACA,WACA,cACA,WACA,mBACA,YACA,gBACA,YACA,mBACA,gBACA,mBACA,yBACA,YACA,UACA,cACA,mBACA,cACA,gBACA,oBACA,YACA,mBACA,eACA,wBACA,cACA,sBACA,UACA,YACA,+BACA,0BACA,aACA,kBACA,YACA,eACA,YACA,aACA,cACA,oBACA,aACA,gBACA,qBACA,qCACA,eACA,YACA,YACA,oBACA,sBACA,gBACA,YACA,uBACA,UACA,kBACA,UACA,mBACA,UACA,aACA,gBACA,6BACA,OACA,eACA,YACA,SACA,aACA,MACA,kBACA,WACA,qBACA,yBACA,oBACA,aACA,QACA,kBACA,WACA,eACA,6BACA,YACA,0BACA,oBACA,MACA,2BACA,aACA,eACA,oBACA,mBACA,+BACA,eACA,mBACA,aACA,wBACA,oCACA,aACA,aACA,gBACA,eACA,MACA,oBACA,gBACA,YACA,oBACA,mBACA,gBACA,eACA,wBACA,sBACA,wBACA,gBACA,gBACA,4BACA,sBACA,uBACA,WACA,iBACA,aACA,WACA,eACA,iBACA,0BACA,WACA,SACA,MACA,gBACA,cACA,WACA,mBACA,kBACA,iBACA,aACA,kBACA,iBACA,aACA,WACA,kBACA,gBACA,aACA,eACA,WACA,qCACA,UACA,OACA,UACA,UACA,WACA,cACA,WACA,SACA,gBACA,gBACA,kBACA,sBACA,UACA,UACA,kBACA,qBACA,UACA,YACA,iBACA,UACA,YACA,kBACA,QACA,4BACA,aACA,gBACA,gBACA,WACA,cACA,UACA,mBACA,mBACA,YACA,WACA,aACA,aACA,gBACA,YACA,eACA,uBACA,aACA,gCACA,YACA,UCrhBJ,SAASC,EAAuBC,GAC5B,IAAMC,EAAID,EAAKE,OAAO,GAChBC,EAAOH,EAAKI,OAAS,EACvBC,EAAQ,UAAMJ,IAAMA,EAAEK,cAAgB,IAAM,IAApC,WAYZ,MAV8B,QAA1BN,EAAKO,OAAOJ,EAAO,GACnBE,GAAY,OACqB,MAA1BL,EAAKE,OAAOC,EAAO,IAAoC,MAAtBH,EAAKE,OAAOC,GACpDE,GAAY,IACqB,MAA1BL,EAAKE,OAAOC,EAAO,IAAwC,OAA1BH,EAAKO,OAAOJ,EAAO,GAC3DE,GAAY,MACsB,MAA3BL,EAAKE,OAAOC,EAAO,IAAkD,OAA3BH,EAAKO,OAAOJ,EAAO,KACpEE,GAAY,OAGTA,EAGX,SAASG,EAAmBR,EAAMS,EAAOC,GACrC,OAAOV,EAAKW,QAAQF,EAAOC,GAG/B,SAASE,EAAOC,EAAKC,EAAMH,GACvB,IAAII,EAAMD,EAAKH,QAAQ,wBAAyB,QAC5CK,EAAM,IAAIC,OAAOF,EAAK,MAC1B,OAAOF,EAAIF,QAAQK,EAAKL,GAGrB,SAASO,EAA0BC,EAASC,GAC/C,OAAOC,EAAeF,EAAQnB,MAAM,GAGjC,SAASsB,EAAkBH,EAASC,GACvC,OAAOC,EA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","file":"static/js/main.becfd3db.chunk.js","sourcesContent":["const bullshitTerms = [\n    '(business|client|community|culture|customer|data|goal|intelligence|market' +\n        '|process|quality|results|role|sales|subject|service|user)' +\n        '.(centric(ity)?|facing|oriented|driven|focused|assessment|service|process|align(ed|ment|ing))',\n    '10x',\n    '24/7',\n    'ai',\n    'agile',\n    'ambassador',\n    'artificial intelligence',\n    'at (your|their) fingertips?',\n    'autonomous',\n    'a[-/]b testing',\n    'acquisition',\n    'action items?',\n    'act in time',\n    'advanc(es?|ing)',\n    'advantages?',\n    'agendas?',\n    'agents?',\n    'aggregat(e|ion)',\n    'accelerate',\n    'all.in.one',\n    'all.new',\n    'amazing',\n    'analytics?',\n    'application service providers?',\n    'as a service',\n    'assets?',\n    'astonishing',\n    'authoritative',\n    'automated',\n    'augmented',\n    'extended reality',\n    'award.winning',\n    'b2(b|c)',\n    'back to the drawing board',\n    'ball.?park',\n    'band.aid',\n    'bandwidth',\n    '(benefit|gap) analysis',\n    'bespoke',\n    'best.in.class',\n    'best.of.breed',\n    'best.practice',\n    'big.data',\n    'big picture',\n    'big thinkers?',\n    'block.?chain',\n    'blazing(ly)? fast',\n    'boil the ocean',\n    'bottom.line',\n    'bottom.up',\n    'boost(s|ing)?',\n    'boundless',\n    'brain.?storm(ing)?',\n    'brain.?dump',\n    'brand(s?|ing|ed)',\n    'bright',\n    'building.trust',\n    'bulletproof',\n    'burn.rates?',\n    'business( cases| plans)',\n    'buzz',\n    'call to action',\n    'capacity',\n    'capabilit(y|ies)',\n    'capitali(s|z)e',\n    'centers? of excellence',\n    'challenges?',\n    'change agents?',\n    'circle the wagons',\n    'client-centered',\n    'client-centric',\n    'client-focused',\n    'cloud',\n    'cloud native',\n    'cloudif(y|ication)',\n    'collaborat(e|ion|ive)s?',\n    'combat(ing|s)?',\n    'comfort( zone)?',\n    'commit(ments?|tee)?',\n    'communicat(e|ion)s?',\n    'company-employee.fit',\n    'compelling',\n    'competitive( advantage)?',\n    'connected systems?',\n    'complex(ity)?',\n    'comprehensive',\n    'connect the dots',\n    'container orchestration',\n    'containerizat(e|ion|ing)',\n    'content management',\n    'contextual(ly)?',\n    'contingency plans?',\n    'control groups?',\n    'control plane',\n    'convergence',\n    'convergent',\n    'conversions?',\n    'core business',\n    'core competenc(y|ies)',\n    'core.to.edge',\n    'cosmic',\n    'cost-effective',\n    'cost/benefit',\n    'cost control',\n    'counter(s|ing)?',\n    'craftsmanship',\n    'critical path',\n    'crypto.currency',\n    'crypto(?!graphy).\\\\w+',\n    'crm',\n    'cross.sell',\n    'crowd.?(fund(s?|ed|ing)|sourc(ed|e|ing))',\n    'customer obsession',\n    'cutting.edge',\n    'cyber',\n    'dashboards?',\n    'dashboarding',\n    'data mining',\n    'decentrali(s|z)ed',\n    'de-?dupe',\n    'deep dive',\n    'deep learning',\n    'delight',\n    'deliver(able)?s?',\n    'demographic',\n    'demystify',\n    'demystifying',\n    'deploy(less|s)?',\n    'devops?',\n    'dialog(ue?)s?',\n    'digital transformation',\n    'differentiation',\n    'discover(y|ed)?',\n    'distributed ledgers?',\n    'disrupt(ive|tor|ion|er)?',\n    'dollar.productive',\n    'downsi(s|z)e',\n    'drill down',\n    'drink the kool-aid',\n    'drive( out|s)?',\n    'drop.?in',\n    'drop the ball',\n    'due dilligence',\n    'dynamic(s|ally)?',\n    'e-?(business|commerce|tailers)',\n    'early.stage',\n    'eas(y|ily)',\n    'ecosystem(s)?',\n    'edge.comput?(ed|ing)',\n    'efficien(t|cy)',\n    'effortless(ly)?',\n    'elastic',\n    'elaboration',\n    'elephant in the room',\n    'elevator pitch(ing)?',\n    'enabl(e|ing)',\n    'emerging markets?',\n    'empower(ing|ment|s)?',\n    'enablement',\n    'end of the day',\n    'end.to.end',\n    'engulf',\n    'engag(e(d)|ing|ment)',\n    'enhanced?',\n    'enterprise',\n    'erp',\n    'estimate',\n    'eta',\n    'etched in stone',\n    'evangelist',\n    'evolution',\n    'exceed expectations',\n    'excellent',\n    'exceptional',\n    'exclusive(ly)?',\n    'exhaustive',\n    'expedite',\n    'experiences',\n    'experts?',\n    'expertise',\n    'exposure',\n    'extraordinary',\n    'facilitat(e|or)',\n    'fast track',\n    'fault.tolerant',\n    'feeling excited',\n    'first.rate',\n    'first.to.market',\n    'flexibility',\n    'flux',\n    'focus(es|ing)?',\n    'foot view',\n    'forward-thinking',\n    'fosters?',\n    'four pillars',\n    'frictionless',\n    'front lines',\n    'frustration[- ]free',\n    'functional',\n    'futurist',\n    'full benefit',\n    'future.proof',\n    'game changer',\n    'game plan',\n    'behavioral',\n    'global(ly)?',\n    'go public',\n    'go.to.market',\n    'goals?',\n    'god-speed',\n    'going forward',\n    'granular',\n    'ground.?breaking',\n    'growth',\n    'grow',\n    'guidance',\n    'guru',\n    'guarantee(d)?',\n    'hackathon',\n    'hacker( mindset)?',\n    'happiness manage(ment|rs?)',\n    'hardball',\n    'heavy.lifting',\n    'herding cats',\n    'hidden.gem',\n    'hidden.meaning',\n    'high.level',\n    '(high|mass).impact',\n    'high quality',\n    'highly.scalable',\n    'hive ?mind',\n    'hybrid environments?',\n    'hyperautomation',\n    'hyper.personalization',\n    'hyperconverged',\n    'hyperscal(e|ed|er|ing)',\n    'holistic',\n    'ideathon',\n    'ideation',\n    'impact(ful|s)?',\n    'impeccable',\n    'in( |-)a( |-)nutshell',\n    'incent',\n    '(dis)?incentivi(s|z)e',\n    'increase the odds',\n    'incredibl(e|y)',\n    '(inflat|redeem)able value',\n    'influencers?',\n    'influx',\n    'initiat(es?|ing|ives?)',\n    'innovat(e|ed|ion|ive|ing|or)s?',\n    'inspir(e|ing|ation)',\n    'insights?',\n    'integrat(e|ed|ion)s?',\n    'internet[- ]of[- ]things',\n    'intellectual property',\n    'intuitive',\n    'iot',\n    'key( result)?s?',\n    'kickstart(er|ed|ing)?s?',\n    'killjoy',\n    'knowledge.(base|transfer|sharing)',\n    'kpis?',\n    'land(ing page)?s?',\n    'lead the field',\n    'leading',\n    'leaders?',\n    'leadership',\n    'learnings',\n    'legacy',\n    'lessons learned',\n    'level (the )? playing field',\n    'level set',\n    'leverag(e|ing)s?',\n    'liais(es?|ings?)',\n    'lifecycle',\n    'low.hanging fruit',\n    'look.(&|and).feel',\n    'm2m',\n    'machine learning',\n    'made simple',\n    'magical',\n    'market (chang(er|ing)|leader|window|simplified|fit)',\n    'market.ready',\n    'marketing automation',\n    'marketing collateral',\n    'maximi(s|z)e',\n    'meaningful( client | )interactions?',\n    'measurements?',\n    'methodolog(y|ies)',\n    'metrics',\n    'middleware',\n    'milestone',\n    'military.grade encryption',\n    'mind ?share',\n    'mind ?shower',\n    'mind-boggling',\n    'mindset',\n    '(mission|time).critical',\n    'miracle',\n    'ml',\n    'moneti(s|z)e',\n    'mov(e|ing) (fast|forward)',\n    'multitask(ing?)',\n    'multifaceted',\n    'multi-?tenant(ed)?',\n    'mvp',\n    'negotiated',\n    'networking',\n    'new.economy',\n    'new.breed',\n    '(new|next|second).(level|gen|generation)',\n    'nexus',\n    'niches?',\n    'ninja',\n    'no-brainer',\n    'non-traditional management',\n    'objectives',\n    'occupy the field',\n    'off.site',\n    'off.the.(radar|shelf)',\n    'on board',\n    'on.premises?',\n    'on the (back end|radar screen|same page|house)',\n    'one.stop.shop',\n    'one to one',\n    'open the kimono',\n    'opportunit(y|ies)',\n    'outperform',\n    'overarch(es?|ing)?',\n    'optimal',\n    'orthogonal',\n    'outcome(s)',\n    'outstanding',\n    'out(side)?.(of)?.the.(box|loop)',\n    'outsourc(e|ed|ing)',\n    '(total cost of )?ownership',\n    'paradigms?( shift)?',\n    'partner(ships?)?',\n    'patents?',\n    'people.focus(ed|sed)',\n    'performance indicators',\n    'perfect(ly)?',\n    'personaliz(e|ed|ation)',\n    'perspective',\n    'phases?',\n    'phased approach',\n    'pipeline',\n    'pioneers',\n    'pivot',\n    'planning horizon',\n    'platforms?',\n    'pledg(es?|ing)',\n    'plethora',\n    'plug.?in',\n    'potentials?',\n    'powerful',\n    'prioriti(s|z)ed?',\n    'proactive',\n    'problem space',\n    'processes',\n    'profit(ability)?',\n    'progress(es)?',\n    'promot(e|ion)?s?',\n    'promotional collateral',\n    'prominent',\n    'promise',\n    'proprietary',\n    'proof.of.concept',\n    'prove(n|d)?',\n    'purpose.built',\n    'push the envelope',\n    'push.back',\n    'production.ready',\n    'productivity',\n    'pushing on open doors',\n    'quick wins?',\n    'rais(e|ing) the bar',\n    'ramp.up',\n    'ravishing',\n    '(reaping )(tangible )rewards',\n    'relationship management',\n    'responsive',\n    'engage(ments?)?',\n    'reach out',\n    'reactivation',\n    'real.time',\n    'real.world',\n    'reconfigure',\n    'redefin(e|ed|ing)',\n    'red flags?',\n    'reengineering',\n    'reimagin(e|ed|ing)',\n    'reinvent(ing)? the(.square)? wheel',\n    'reinvigorate',\n    'relevance',\n    'repurpose',\n    'resilien(ce|cy|t)',\n    'resource allocation',\n    'restructuring',\n    'retention',\n    'return on investment',\n    'results',\n    'reus(e|ability)',\n    'revenue',\n    'reverse.engineer',\n    'revisit',\n    'revolution',\n    'revolutionary',\n    'reward(ing)?(.experience)?',\n    'rich',\n    'ring fencing',\n    'road ?map',\n    'robust',\n    'rock.?star',\n    'roi',\n    'run the numbers',\n    '(s|p)aas',\n    'sacrific(e|es|ing)',\n    'scal(e|es|ing|ability)',\n    'high availability',\n    'scenarios?',\n    'scope',\n    'scrum( master)?',\n    'seamless',\n    'secret sauce',\n    'search engine optimization',\n    'segments?',\n    'self.?guid(ed|ing|ance)',\n    'self-managed team',\n    'seo',\n    '(serial )?entrepreneurs?',\n    'serverless',\n    'service mesh',\n    'shareholder value',\n    'significant(ly)?',\n    'single-source responsibility',\n    'skill ?sets?',\n    'slim(ming)? down',\n    'smart(er)?',\n    'smoke (&|and) mirrors',\n    'social(.media|.gaming|.networks?)',\n    'solidality',\n    'solutions?',\n    'sophisticated',\n    'soup to nuts',\n    'sow',\n    'spatial.computing',\n    'stakeholders?',\n    'start.up?',\n    'statement of work',\n    'state.of.the.art',\n    'step.changes?',\n    'sticky-?ness',\n    'strateg(y|ic|ize|ise)',\n    'streamlin(ed|e|ing)',\n    'strength(en(ing)?|s)?',\n    'story points?',\n    'success(ful)?',\n    'super(critical|star|nova)',\n    'sustainab(le|ility)',\n    'synerg(y|ies|ized|i)',\n    'systems?',\n    'tackl(es?|ing)',\n    'tailwinds?',\n    'talented',\n    'take offline',\n    'talking points',\n    'target (audience|group)',\n    'targeted',\n    'tasked',\n    'tco',\n    'team.building',\n    'team.player',\n    'teamwork',\n    'technolog(y|ies)',\n    'that being said',\n    'thought.leader',\n    'throughput',\n    'time.to.awesome',\n    'time.to.market',\n    'timelines?',\n    'top.down',\n    'top.of.the.game',\n    'total quality',\n    'touch.base',\n    'touchpoints?',\n    'traction',\n    'transform(ing|ative|ation(al)?|s?)',\n    'trends?',\n    'true',\n    'truths?',\n    'turnkey',\n    'ultimate',\n    'up.to.speed',\n    'up-?sell',\n    'upside',\n    'user.friendly',\n    'user funnels?',\n    'user.experience',\n    'utili(s|z)(e|ation)',\n    'uncover',\n    'unicorn',\n    'unique approach',\n    'unlimited.holidays',\n    'values?',\n    'valueable',\n    'value.add(ed)?',\n    'venture',\n    'venturing',\n    'vertical market',\n    'viral',\n    'virtual(ization|isation)?',\n    'visibility',\n    'visio(n|nary)',\n    'walk the talk',\n    'wearable',\n    'web.enabled',\n    'win-win',\n    'wisdom of crowds',\n    'with due respect',\n    'with ease',\n    'wizards?',\n    'workflows?',\n    'workloads?',\n    'workplaceless',\n    'workspace',\n    'world.?class',\n    'world a better place',\n    'wow.factor',\n    'you\\'ve never seen (a|an) \\\\w+',\n    'zeitgeist',\n    'zenith'\n];\n\nexport default bullshitTerms;","import bullshitTerms from './terms';\n\nfunction revealBullshitInternal(text) {\n    const c = text.charAt(0);\n    const last = text.length - 1;\n    let bullshit = `${c === c.toUpperCase() ? 'B' : 'b'}ullshit`;\n\n    if (text.substr(last - 2) === 'ing') {\n        bullshit += 'ting';\n    } else if (text.charAt(last - 1) !== 's' && text.charAt(last) === 's') {\n        bullshit += 's';\n    } else if (text.charAt(last - 2) !== 'e' && text.substr(last - 1) === 'ed') {\n        bullshit += 'ted';\n    } else if (text.charAt(last - 2) !== ('o' || 'e') && text.substr(last - 1) === ('or' || 'er')) {\n        bullshit += 'ter';\n    }\n\n    return bullshit;\n}\n\nfunction findAndReplaceText(text, regex, replaceFunc) {\n    return text.replace(regex, replaceFunc);\n}\n\nfunction censor(str, find, replace) {\n    var esc = find.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    var reg = new RegExp(esc, 'ig');\n    return str.replace(reg, replace);\n}\n\nexport function revealDOMBullshitCensored(portion, match) {\n    return revealBullshit(portion.text, true);\n}\n\nexport function revealDOMBullshit(portion, match) {\n    return revealBullshit(portion.text);\n}\n\nexport function revealBullshit(text, censored = false) {\n    const bullshitRe = new RegExp(`\\\\b(${bullshitTerms.join('|')})\\\\b`, 'gi');\n\n    var bsText = findAndReplaceText(\n        text,\n        bullshitRe,\n        revealBullshitInternal\n    );\n\n    if (censored) {\n        var censoredText = censor(bsText,\"shit\",\"poopoo\");\n\n        return censoredText;\n    }\n    else {\n        return bsText;\n    }\n}\n","const urlRedirects = [\n    'https://www.youtube.com/watch?v=tPEE9ZwTmy0', // Shortest Video on Youtube\n    'https://www.youtube.com/watch?v=dQw4w9WgXcQ', // Rick Astley - Never Gonna Give You Up (Video)\n    'https://www.youtube.com/watch?v=4Hz3RpiljFk', // Elmo vine : Hello darkness my old friend\n    'https://www.youtube.com/watch?v=ZZ5LpwO-An4', // HEYYEYAAEYAAAEYAEYAA\n    'https://www.youtube.com/watch?v=XeDM1ZjMK50', // \"I'm Going to Jail!\"\n    'https://www.youtube.com/watch?v=M69Sn3OERZo', // Monke\n    'https://www.youtube.com/watch?v=NKpWGmG8qpE', // Ed Sings Your Love by The Outfield (Part 3 FINALE)\n    'https://www.youtube.com/watch?v=JsKUkNZM53M', // Snickers Magic Mouth Commercial\n    'https://www.youtube.com/watch?v=TiC8pig6PGE', // I Love Refrigerators\n    'https://www.youtube.com/watch?v=0MW0mDZysxc', // *teleports behind you*\n    'https://www.youtube.com/watch?v=UHiXjuppa8U', // If movies got to the point in a timely manner\n    'https://www.youtube.com/watch?v=QyrDgEz3DR0', // The Emperors New Groove: Oh Yeah It's All Coming Together\n];\n\nexport default urlRedirects;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Uwuifier from 'uwuifier';\nimport findAndReplaceDOMText from 'findandreplacedomtext';\nimport { revealBullshit, revealDOMBullshit, revealDOMBullshitCensored } from './replace.js'\nimport urlRedirects from './redirects.js';\n\nclass InputBox extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            text: \"\",\n        };\n    }\n\n    updateText(newText) {\n        this.setState({text: newText});\n        this.props.onChange(this.state.text);\n    }\n\n    render() {\n        return (\n            <textarea placeholder=\"Place your corporate text here to be buwwupoopoo-ified.\" onChange={(newText) => this.updateText(newText.target.value)} name=\"input-box\" rows=\"20\" cols=\"100\">\n                {this.state.text}\n            </textarea>\n        );\n    }\n}\n\nclass OutputBox extends React.Component {\n    render() {\n        return (\n            <textarea key={this.props.text} name=\"output-box\" readOnly rows=\"20\" cols=\"100\">\n                {this.props.text}\n            </textarea>\n        );\n    }\n}\n\nconst topLevelDiv = \"buwwshitTopLevelDiv\";\n\nfunction uwuify({text}) {\n    const uwu = new Uwuifier();\n    let newText = uwu.uwuifySentence(revealBullshit(text));\n    return newText;\n}\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputText: \"\",\n            outputText: \"\",\n        };\n    }\n\n    buwwuify(input, censored) {\n        var htmlObject = document.createElement('div');\n        htmlObject.id = topLevelDiv;\n        htmlObject.innerHTML = input;\n        var doc = new DOMParser().parseFromString(htmlObject.innerHTML, \"text/html\");\n\n        if (doc.body.firstChild === doc.body.lastChild) {\n            // User input plaintext\n            const uwu = new Uwuifier();\n            let newText = uwu.uwuifySentence(revealBullshit(input, censored));\n\n            this.setState({outputText: newText});\n        }\n        else {\n            // User input HTML\n\n            // Remove newlines from input to work-around\n            // an issue where findAndReplaceDOMText fails\n            // to find extra text after a newline.\n            var docString = new XMLSerializer().serializeToString(doc);\n            docString = docString.replace(/(\\r\\n|\\n|\\r)/gm, \"\");\n            doc = new DOMParser().parseFromString(docString, \"text/html\");\n\n            if (censored) {\n                findAndReplaceDOMText(doc.getRootNode(), {\n                    preset: 'prose',\n                    find: /.+/,\n                    replace: revealDOMBullshitCensored\n                });\n            }\n            else {\n                findAndReplaceDOMText(doc.getRootNode(), {\n                    preset: 'prose',\n                    find: /.+/,\n                    replace: revealDOMBullshit\n                });\n            }\n\n            findAndReplaceDOMText(doc.getRootNode(), {\n                preset: 'prose',\n                find: /.+/,\n                replace: uwuify\n            });\n\n            var anchors = doc.getElementsByTagName('a');\n            for (var i = 0; i < anchors.length; i++) {\n                var index = Math.floor(Math.random() * (0, urlRedirects.length - 1));\n                anchors[i].href = urlRedirects[index];\n            }\n\n            var output = new XMLSerializer().serializeToString(doc);\n            if (!output.startsWith(\"<!DOCTYPE html>\"))\n                output = \"<!DOCTYPE html>\" + output;\n            this.setState({outputText: output});\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <div>\n                    <InputBox id=\"inputBox\" key={1} onChange={(text) => this.setState({inputText: text})}/>\n                </div>\n                <button onClick={() => this.buwwuify(document.getElementsByName('input-box')[0].value, document.getElementsByName('censorCheckbox')[0].checked)}>\n                    Disrupt the competition with some Buwwushit\n                </button>\n                <input type=\"checkbox\" id=\"censorCheckbox\" name=\"censorCheckbox\" value=\"censored\" />\n                <label for=\"censorCheckbox\"> Censored?</label>\n                <div>\n                    <OutputBox key={2} text={this.state.outputText}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}